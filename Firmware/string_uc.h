/**********************************************************************************
**	ENVIROMENT VARIABILE
**********************************************************************************/

#ifndef STRING_UC_H_
	#define STRING_UC_H_

/**********************************************************************************
**	GLOBAL INCLUDES
**********************************************************************************/

/**********************************************************************************
**	DEFINES
**********************************************************************************/

/**********************************************************************************
**	MACROS
**********************************************************************************/

/**********************************************************************************
**	NAMESPACE
**********************************************************************************/

//! @namespace User My custom namespace
namespace User
{

/**********************************************************************************
**	ENUM
**********************************************************************************/

/**********************************************************************************
**	TYPEDEFS
**********************************************************************************/

/**********************************************************************************
**	PROTOTYPE: STRUCTURES
**********************************************************************************/

/**********************************************************************************
**	PROTOTYPE: GLOBAL VARIABILES
**********************************************************************************/

/**********************************************************************************
**	PROTOTYPE: CLASS
**********************************************************************************/

/************************************************************************************/
//! @class 		String_uc
/************************************************************************************/
//!	@author		Orso Eric
//! @version	0.1 alpha
//! @date		2019/05
//! @brief		Dummy Library
//! @details
//!	Verbose description \n
//! xxx
//! @pre		No prerequisites
//! @bug		None
//! @warning	No warnings
//! @copyright	License ?
//! @todo		todo list
/************************************************************************************/

class String_uc
{
	//Visible to all
	public:
		//--------------------------------------------------------------------------
		//	CONSTRUCTORS
		//--------------------------------------------------------------------------

		//! Default constructor
		String_uc( void );

		//--------------------------------------------------------------------------
		//	DESTRUCTORS
		//--------------------------------------------------------------------------

		//!Default destructor
		~String_uc( void );

		//--------------------------------------------------------------------------
		//	OPERATORS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	SETTERS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	GETTERS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	TESTERS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	PUBLIC METHODS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	PUBLIC STATIC METHODS
		//--------------------------------------------------------------------------

		//Compute length of a c style string up to the terminator or up to a maximum length
		static uint8_t str_length( uint8_t *str, uint8_t max_length );
		//Convert from binary number to string
		template <typename T>
		static uint8_t to_string( T value, uint8_t *str );

		//--------------------------------------------------------------------------
		//	PUBLIC VARS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	ENUM
		//--------------------------------------------------------------------------

		//Enumerate defines for number of digit and string size for various types
		typedef enum _Size
		{
			DIGIT_U8 = 3,
			DIGIT_S8 = 3,
			DIGIT_U16 = 5,
			DIGIT_S16 = 5,
			DIGIT_U32 = 10,
			DIGIT_S32 = 10,
			STRING_U8 = 4,
			STRING_S8 = 5,
			STRING_U16 = 6,
			STRING_S16 = 7,
			STRING_U32 = 11,
			STRING_S32 = 12
		} Size;

	//Visible to derived classes
	protected:
		//--------------------------------------------------------------------------
		//	PROTECTED METHODS
		//--------------------------------------------------------------------------

		//--------------------------------------------------------------------------
		//	PROTECTED VARS
		//--------------------------------------------------------------------------

	//Visible only inside the class
	private:
		//--------------------------------------------------------------------------
		//	PRIVATE METHODS
		//--------------------------------------------------------------------------

		//! dummy method for easy copy
		bool dummy( void );

		//--------------------------------------------------------------------------
		//	PRIVATE VARS
		//--------------------------------------------------------------------------

};	//End Class:

/**********************************************************************************
**	NAMESPACE
**********************************************************************************/

} //End Namespace

#else
    #warning "Multiple inclusion of hader file"
#endif
